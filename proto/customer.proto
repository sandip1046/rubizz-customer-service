syntax = "proto3";

package rubizz.customer;

option go_package = "github.com/rubizz/proto/customer";

import "common/common.proto";

// Customer service definition
service CustomerService {
  // Customer management
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse);
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);
  rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse);
  rpc SearchCustomers(SearchCustomersRequest) returns (SearchCustomersResponse);
  rpc GetCustomerByEmail(GetCustomerByEmailRequest) returns (GetCustomerByEmailResponse);
  rpc GetCustomerStats(GetCustomerStatsRequest) returns (GetCustomerStatsResponse);
  
  // Customer profile management
  rpc UpdateCustomerProfile(UpdateCustomerProfileRequest) returns (UpdateCustomerProfileResponse);
  rpc UpdateCustomerPreferences(UpdateCustomerPreferencesRequest) returns (UpdateCustomerPreferencesResponse);
  
  // Address management
  rpc AddCustomerAddress(AddCustomerAddressRequest) returns (AddCustomerAddressResponse);
  rpc GetCustomerAddresses(GetCustomerAddressesRequest) returns (GetCustomerAddressesResponse);
  rpc UpdateCustomerAddress(UpdateCustomerAddressRequest) returns (UpdateCustomerAddressResponse);
  rpc DeleteCustomerAddress(DeleteCustomerAddressRequest) returns (DeleteCustomerAddressResponse);
  
  // Verification and authentication
  rpc VerifyCustomer(VerifyCustomerRequest) returns (VerifyCustomerResponse);
  rpc UpdateLastLogin(UpdateLastLoginRequest) returns (UpdateLastLoginResponse);
  
  // Loyalty points
  rpc AddLoyaltyPoints(AddLoyaltyPointsRequest) returns (AddLoyaltyPointsResponse);
  rpc RedeemLoyaltyPoints(RedeemLoyaltyPointsRequest) returns (RedeemLoyaltyPointsResponse);
  rpc GetLoyaltyPoints(GetLoyaltyPointsRequest) returns (GetLoyaltyPointsResponse);
  
  // Notifications
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse);
  
  // Health check
  rpc HealthCheck(rubizz.common.HealthCheckRequest) returns (rubizz.common.HealthCheckResponse);
}

// Customer data structures
message Customer {
  string id = 1;
  string email = 2;
  string phone = 3;
  string first_name = 4;
  string last_name = 5;
  int64 date_of_birth = 6; // Unix timestamp
  string gender = 7;
  bool is_verified = 8;
  bool is_active = 9;
  int64 last_login_at = 10; // Unix timestamp
  int64 created_at = 11; // Unix timestamp
  int64 updated_at = 12; // Unix timestamp
  CustomerProfile profile = 13;
  CustomerPreferences preferences = 14;
  repeated CustomerAddress addresses = 15;
  repeated CustomerLoyaltyPoint loyalty_points = 16;
  repeated CustomerActivity activities = 17;
  repeated CustomerNotification notifications = 18;
}

message CustomerProfile {
  string id = 1;
  string customer_id = 2;
  string avatar = 3;
  string bio = 4;
  string preferences = 5; // JSON string
  string emergency_contact = 6;
  string dietary_restrictions = 7;
  string special_requests = 8;
  int64 created_at = 9; // Unix timestamp
  int64 updated_at = 10; // Unix timestamp
}

message CustomerPreferences {
  string id = 1;
  string customer_id = 2;
  string language = 3;
  string currency = 4;
  string timezone = 5;
  bool email_notifications = 6;
  bool sms_notifications = 7;
  bool push_notifications = 8;
  bool marketing_emails = 9;
  int64 created_at = 10; // Unix timestamp
  int64 updated_at = 11; // Unix timestamp
}

message CustomerAddress {
  string id = 1;
  string customer_id = 2;
  string type = 3; // HOME, WORK, BILLING, SHIPPING, OTHER
  string address_line1 = 4;
  string address_line2 = 5;
  string city = 6;
  string state = 7;
  string postal_code = 8;
  string country = 9;
  bool is_default = 10;
  bool is_active = 11;
  int64 created_at = 12; // Unix timestamp
  int64 updated_at = 13; // Unix timestamp
}

message CustomerLoyaltyPoint {
  string id = 1;
  string customer_id = 2;
  int32 points = 3;
  string type = 4; // EARNED, REDEEMED, EXPIRED, BONUS, REFERRAL
  string description = 5;
  string reference_id = 6;
  int64 expires_at = 7; // Unix timestamp
  bool is_redeemed = 8;
  int64 redeemed_at = 9; // Unix timestamp
  int64 created_at = 10; // Unix timestamp
}

message CustomerActivity {
  string id = 1;
  string customer_id = 2;
  string activity_type = 3;
  string description = 4;
  string metadata = 5; // JSON string
  string ip_address = 6;
  string user_agent = 7;
  int64 created_at = 8; // Unix timestamp
}

message CustomerNotification {
  string id = 1;
  string customer_id = 2;
  string type = 3;
  string title = 4;
  string message = 5;
  bool is_read = 6;
  int64 read_at = 7; // Unix timestamp
  string metadata = 8; // JSON string
  int64 created_at = 9; // Unix timestamp
}

// Request/Response messages
message CreateCustomerRequest {
  string email = 1;
  string phone = 2;
  string first_name = 3;
  string last_name = 4;
  int64 date_of_birth = 5; // Unix timestamp
  string gender = 6;
  string emergency_contact = 7;
  string dietary_restrictions = 8;
  string special_requests = 9;
}

message CreateCustomerResponse {
  rubizz.common.ApiResponse api_response = 1;
  Customer customer = 2;
}

message GetCustomerRequest {
  string customer_id = 1;
}

message GetCustomerResponse {
  rubizz.common.ApiResponse api_response = 1;
  Customer customer = 2;
}

message UpdateCustomerRequest {
  string customer_id = 1;
  string phone = 2;
  string first_name = 3;
  string last_name = 4;
  int64 date_of_birth = 5; // Unix timestamp
  string gender = 6;
}

message UpdateCustomerResponse {
  rubizz.common.ApiResponse api_response = 1;
  Customer customer = 2;
}

message DeleteCustomerRequest {
  string customer_id = 1;
}

message DeleteCustomerResponse {
  rubizz.common.ApiResponse api_response = 1;
}

message SearchCustomersRequest {
  string email = 1;
  string phone = 2;
  string first_name = 3;
  string last_name = 4;
  bool is_verified = 5;
  bool is_active = 6;
  rubizz.common.PaginationRequest pagination = 7;
}

message SearchCustomersResponse {
  rubizz.common.ApiResponse api_response = 1;
  repeated Customer customers = 2;
  rubizz.common.PaginationResponse pagination = 3;
}

message GetCustomerByEmailRequest {
  string email = 1;
}

message GetCustomerByEmailResponse {
  rubizz.common.ApiResponse api_response = 1;
  Customer customer = 2;
}

message GetCustomerStatsRequest {
}

message GetCustomerStatsResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerStats stats = 2;
}

message CustomerStats {
  int32 total_customers = 1;
  int32 verified_customers = 2;
  int32 active_customers = 3;
  int32 new_customers_this_month = 4;
  int32 new_customers_this_week = 5;
  int32 new_customers_today = 6;
}

message UpdateCustomerProfileRequest {
  string customer_id = 1;
  string avatar = 2;
  string bio = 3;
  string preferences = 4; // JSON string
  string emergency_contact = 5;
  string dietary_restrictions = 6;
  string special_requests = 7;
}

message UpdateCustomerProfileResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerProfile profile = 2;
}

message UpdateCustomerPreferencesRequest {
  string customer_id = 1;
  string language = 2;
  string currency = 3;
  string timezone = 4;
  bool email_notifications = 5;
  bool sms_notifications = 6;
  bool push_notifications = 7;
  bool marketing_emails = 8;
}

message UpdateCustomerPreferencesResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerPreferences preferences = 2;
}

message AddCustomerAddressRequest {
  string customer_id = 1;
  string type = 2;
  string address_line1 = 3;
  string address_line2 = 4;
  string city = 5;
  string state = 6;
  string postal_code = 7;
  string country = 8;
  bool is_default = 9;
}

message AddCustomerAddressResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerAddress address = 2;
}

message GetCustomerAddressesRequest {
  string customer_id = 1;
}

message GetCustomerAddressesResponse {
  rubizz.common.ApiResponse api_response = 1;
  repeated CustomerAddress addresses = 2;
}

message UpdateCustomerAddressRequest {
  string address_id = 1;
  string type = 2;
  string address_line1 = 3;
  string address_line2 = 4;
  string city = 5;
  string state = 6;
  string postal_code = 7;
  string country = 8;
  bool is_default = 9;
  bool is_active = 10;
}

message UpdateCustomerAddressResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerAddress address = 2;
}

message DeleteCustomerAddressRequest {
  string address_id = 1;
}

message DeleteCustomerAddressResponse {
  rubizz.common.ApiResponse api_response = 1;
}

message VerifyCustomerRequest {
  string customer_id = 1;
}

message VerifyCustomerResponse {
  rubizz.common.ApiResponse api_response = 1;
  Customer customer = 2;
}

message UpdateLastLoginRequest {
  string customer_id = 1;
  string ip_address = 2;
  string user_agent = 3;
}

message UpdateLastLoginResponse {
  rubizz.common.ApiResponse api_response = 1;
}

message AddLoyaltyPointsRequest {
  string customer_id = 1;
  int32 points = 2;
  string type = 3;
  string description = 4;
  string reference_id = 5;
  int64 expires_at = 6; // Unix timestamp
}

message AddLoyaltyPointsResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerLoyaltyPoint loyalty_point = 2;
}

message RedeemLoyaltyPointsRequest {
  string customer_id = 1;
  int32 points = 2;
  string description = 3;
  string reference_id = 4;
}

message RedeemLoyaltyPointsResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerLoyaltyPoint loyalty_point = 2;
}

message GetLoyaltyPointsRequest {
  string customer_id = 1;
}

message GetLoyaltyPointsResponse {
  rubizz.common.ApiResponse api_response = 1;
  int32 total_points = 2;
  repeated CustomerLoyaltyPoint recent_points = 3;
}

message SendNotificationRequest {
  string customer_id = 1;
  string type = 2;
  string title = 3;
  string message = 4;
  string metadata = 5; // JSON string
}

message SendNotificationResponse {
  rubizz.common.ApiResponse api_response = 1;
  CustomerNotification notification = 2;
}

message GetNotificationsRequest {
  string customer_id = 1;
  bool unread_only = 2;
  rubizz.common.PaginationRequest pagination = 3;
}

message GetNotificationsResponse {
  rubizz.common.ApiResponse api_response = 1;
  repeated CustomerNotification notifications = 2;
  rubizz.common.PaginationResponse pagination = 3;
}
